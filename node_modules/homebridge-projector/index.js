var Service, Characteristic;

var serialport = require("serialport");
var SerialPort = serialport.SerialPort;

module.exports = function(homebridge) {
    Service = homebridge.hap.Service;
    Characteristic = homebridge.hap.Characteristic;

    homebridge.registerAccessory("homebridge-projector", "projector", ProjectorAccessory);
}

function ProjectorAccessory(log, config){
    this.log = log;
    this.name = config.name;

    this._service = new Service.Switch(this.name);
    this._service.getCharacteristic(Characteristic.On)
        .on('set', this._setOn.bind(this));
}

ProjectorAccessory.prototype.getServices = function() {
    return [this._service];
}

ProjectorAccessory.prototype._setOn = function(on, callback) {

    this.log("Setting switch to " + on);

    var myPort = new SerialPort('tyyUSB0', {
        baudRate: 9600,
        // look for return and newline at the end of each data packet:
        parser: serialport.parsers.readline("\n")
    });

    myPort.write('~0000 1\n'); //ON

    if (on) {
        setTimeout(function() {
            this._service.setCharacteristic(Characteristic.On, false);
        }.bind(this), 1000);
    }

    callback();
}
